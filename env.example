# Copy this file to .env.local and fill in your actual values

# Mistral AI Configuration (Required)
# Get your API key from https://console.mistral.ai/
MISTRAL_API_KEY=your_mistral_api_key_here

# Clerk Authentication (Required)
# Get your keys from https://clerk.com/
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
CLERK_SECRET_KEY=
CLERK_WEBHOOK_SECRET=your_clerk_webhook_secret_here
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/dashboard

# MongoDB Configuration (Required)
# Get your connection string from MongoDB Atlas
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/v0-flutter?retryWrites=true&w=majority

# Expo EAS Configuration (Optional - for build functionality)
# Get your access token by running: eas whoami --json
EXPO_TOKEN=your_expo_access_token_here

# Next.js Configuration
NEXTAUTH_SECRET=your-secret-key-here
NEXTAUTH_URL=http://localhost:3000

# API Key Encryption (Required for client-side security)
# Generate a 32-character random string for encryption
ENCRYPTION_KEY=your-32-character-secret-key-here

# Development Notes:
# 1. MISTRAL_API_KEY is required for the app to function
# 2. Clerk keys are required for user authentication
# 3. CLERK_WEBHOOK_SECRET is needed for automatic user sync to MongoDB
# 4. MONGODB_URI should be a proper Atlas connection string
# 5. EXPO_TOKEN is optional but needed for EAS builds
# 6. Generate a strong NEXTAUTH_SECRET for production
# 7. Update NEXTAUTH_URL for your deployment domain
# 8. ENCRYPTION_KEY is used for securing API keys in client-side requests

# Optional: EAS Build Configuration
EAS_PROJECT_ID=your_eas_project_id_here
EAS_ORGANIZATION=your_expo_organization_here 